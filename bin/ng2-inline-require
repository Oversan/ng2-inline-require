#!/usr/bin/env node

const path = require('path')
const program = require('commander')
const chalk = require('chalk')
const pkg = require('../package')
const inline = require('../lib/inline')
const fileListCreator = require('../lib/fileListCreator')
const isFile = require('../lib/fileHelpers').isFile
const isDirectory = require('../lib/fileHelpers').isDirectory

function createInlinedFiles(srcPath, destPath) {
  fileListCreator(srcPath, destPath).forEach(item => {
    inline(item.src, item.dest)
  })
}

program
  .version(pkg.version)
  .option('-i, --in [path]', 'Input file path with .ts extension')
  .option('-I, --infolder [path]', 'Input folder path with .ts files')
  .option('-o, --out [path]', 'Output file path with .ts extension')
  .option('-O, --outfolder [path]', 'Output folder path for generated files')
  .parse(process.argv)

if (program.in && program.out) {
  const inPath = path.join(process.cwd(), program.in)
  const outPath = path.join(process.cwd(), program.out)

  if (inPath.length && outPath.length && isFile(inPath) && !isDirectory(outPath)) {
    createInlinedFiles(inPath, outPath)
  } else {
    console.log(chalk.red('Terminated'))
    console.log(chalk.red('Check options "--in", "--out"'))
  }
}

if (program.infolder && program.outfolder) {
  const infolderPath = path.join(process.cwd(), program.infolder)
  const outfolderPath = path.join(process.cwd(), program.outfolder)

  if (infolderPath.length && outfolderPath.length && isDirectory(infolderPath) && isDirectory(outfolderPath)) {
    createInlinedFiles(infolderPath, outfolderPath)
  } else {
    console.log(chalk.red('Terminated'))
    console.log(chalk.red('Check options "--infolder", "--outfolder"'))
  }
}
